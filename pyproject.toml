[project]
name = "scikit-surprise"
authors = [{ name = "Nicolas Hug", email = "contact@nicolas-hug.com" }]
description = "An easy-to-use library for recommender systems."
requires-python = ">=3.11"
keywords = ["recommender", "recommendation system"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "BSD-3-Clause"
license-files = ["LICENSE.md"]
dependencies = [
    # Lower bounds for deps are as in scikit-learn in May 2024, 1.6.dev0
    "joblib>=1.2.0",
    "numpy>=1.21.0,<3.0", # Support numpy 2.x but exclude 3.x for now
    "scipy>=1.6.0",
]
dynamic = ["version", "readme"]

[project.scripts]
surprise = "surprise.__main__:main"

[project.urls]
homepage = "https://surpriselib.com"
repository = "https://github.com/NicolasHug/Surprise"

[build-system]
requires = [
    "setuptools>=61.0.0",
    "wheel",
    "Cython>=3.0.10,<4.0",
    "numpy>=1.21.0,<3.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = { attr = "surprise.__version__" }
readme = { content-type = "text/markdown", file = ["README.md"] }

[tool.setuptools.packages.find]
exclude = ["tests*", "doc*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
ignore = [
    "E203", # whitespace before ':'
    "E231", # missing whitespace after ':'
    "E241", # multiple spaces after ':'
    "E402", # module level import not at top of file
    "W503", # line break before binary operator
    "W504", # line break after binary operator
    "F821", # undefined name
    "E501", # line too long
]
exclude = [".git", "__pycache__", "dist", "build", "*.egg-info"]

[tool.usort]
first_party = ["surprise"]

[tool.ruff]
line-length = 88
target-version = "py311"

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
]
ignore = [
    "E203", # whitespace before ':'
    "E231", # missing whitespace after ':'
    "E241", # multiple spaces after ':'
    "E402", # module level import not at top of file
    "E501", # line too long (handled by black)
]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["E501"]
"examples/**/*.py" = ["E501", "F401"]
"setup.py" = ["E402"]

[tool.ruff.lint.isort]
known-first-party = ["surprise"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "surprise.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "examples.*"
ignore_errors = true
