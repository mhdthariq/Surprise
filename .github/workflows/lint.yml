# This workflow will run lint.sh with modern tools and Python versions

name: Lint

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "black>=24.0.0" "flake8>=7.0.0" "usort>=1.0.8"
          python -m pip install "mypy>=1.8.0" "pylint>=3.0.0" "ruff>=0.3.0"

      - name: Run ruff (fast modern linter)
        run: |
          ruff check --output-format=github .

      - name: Run black (code formatter)
        run: |
          black --check --diff .

      - name: Run usort (import sorter)
        run: |
          usort check .

      - name: Run flake8 (style checker)
        run: |
          flake8 --statistics --show-source --benchmark .

      - name: Run mypy (type checker) on critical files
        run: |
          mypy setup.py rebuild_extensions.py --ignore-missing-imports --no-strict-optional

      - name: Run lint on test files
        run: |
          flake8 --max-line-length=88 --ignore=E203,E231,E241,E402,E501 test_setup.py test_integration.py
          black --check test_setup.py test_integration.py
          usort check test_setup.py test_integration.py

      - name: Run traditional lint script for compatibility
        run: |
          chmod +x lint.sh
          ./lint.sh
